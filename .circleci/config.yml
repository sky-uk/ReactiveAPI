# Warning, do not change version.
version: 2
aliases:
  - &boot_simulator
      name: Boot Simulator
      command: xcrun instruments -w "iPhone 11 (13.5) [" || true
  - &restore_gem_cache
      name: Restore Gemfile Cache
      key: 1-gems-{{ checksum "Gemfile.lock" }}
  - &bundle_install
      name: Update Gemfile
      command: bundle check || bundle install --path vendor/bundle
  - &save_gem_cache
      name: Save Gemfile Cache
      key: 1-gems-{{ checksum "Gemfile.lock" }}
      paths:
        - vendor/bundle
  - &restore_carthage_cache
      name: Restore Cartfile Cache
      key: 2-ca-{{ checksum "date" }}
  - &carthage_bootstrap
      name: Bootstrap iOS dependencies
      command: carthage bootstrap --platform ios --cache-builds
  - &save_carthage_cache
      name: Save Cartfile Cache
      key: 2-ca-{{ checksum "date" }}
      paths:
        - Carthage
  - &ruby_fix
      name: Set Ruby Version
      command:  echo "ruby-2.6" > ~/.ruby-version
  - &fastlane_test
      path: fastlane/test_output
  - &fastlane_artifacts
      path: fastlane/test_output
      destination: reports
jobs:

# Swift setup
  prebase:
    macos:
      xcode: 11.5.0
    shell: /bin/bash --login -eo pipefail
    steps:
      - checkout
      - run: *ruby_fix
      - restore_cache: *restore_gem_cache
      - run: *bundle_install
      - save_cache: *save_gem_cache
      - run: date +%F > date
      - restore_cache: *restore_carthage_cache
      - run: *carthage_bootstrap
      - save_cache: *save_carthage_cache
      - persist_to_workspace:
          root: ~/
          paths: project

# Swift lint
  swiftlint:
    docker:
      - image: dantoml/swiftlint:latest
    steps:
      - checkout
      - run:
          name: Run Swiftlint
          command: |
            mkdir -p test_output/swiftlint
            swiftlint lint --reporter junit | tee test_output/swiftlint/junit.xml
      - store_test_results:
          path: test_output

# Run Unit Tests
  ut-test:
    macos:
      xcode: 11.5.0
    shell: /bin/bash --login -eo pipefail
    steps:
      - attach_workspace:
          at: ~/
      - run: *boot_simulator
      - run: *ruby_fix
      - run:
          name: Run ReactiveAPI Unit Tests
          command: xcodebuild test -scheme ReactiveAPITests  -destination 'platform=iOS Simulator,name=iPhone 11'
      - run:
          name: Run ReactiveAPI Ext Unit Tests
          command: xcodebuild test -scheme ReactiveAPIExtTests  -destination 'platform=iOS Simulator,name=iPhone 11'

workflows:
  version: 2
  build-test:
    jobs:
      - prebase
      - ut-test:
          requires:
            - prebase


